package io.github.chenyilei2016.maintain.manager.constant;

import io.github.chenyilei2016.maintain.client.common.dto.BaseSignDTO;

import java.util.Base64;

/**
 * @author chenyilei
 * @since 2024/05/17 14:27
 */
public abstract class ManagerConstants {

    public static String PROJECT_NAME = "maintain-manager";

    public static byte[] PRIVATE_KEY_BYTE = new byte[]{84, 85, 108, 74, 81, 108, 86, 51, 83, 85, 74, 66, 82, 69, 70, 79, 81, 109, 100, 114, 99, 87, 104, 114, 97, 85, 99, 53, 100, 122, 66, 67, 81, 86, 70, 70, 82, 107, 70, 66, 85, 48, 78, 66, 86, 68, 66, 51, 90, 50, 100, 70, 78, 85, 70, 110, 82, 85, 70, 66, 97, 48, 86, 66, 79, 85, 90, 53, 101, 87, 57, 120, 89, 88, 78, 50, 89, 49, 104, 104, 101, 69, 90, 54, 90, 72, 74, 119, 90, 72, 99, 50, 90, 85, 112, 73, 98, 107, 116, 85, 86, 87, 112, 70, 81, 108, 70, 86, 86, 88, 81, 48, 79, 85, 70, 108, 87, 67, 116, 117, 85, 68, 70, 78, 101, 107, 104, 70, 100, 51, 90, 112, 97, 70, 103, 49, 89, 84, 107, 49, 79, 88, 90, 80, 77, 87, 82, 121, 98, 83, 57, 108, 87, 72, 82, 107, 84, 109, 89, 50, 84, 70, 112, 75, 101, 107, 120, 86, 101, 88, 100, 106, 86, 68, 108, 117, 82, 51, 100, 74, 82, 69, 70, 82, 81, 85, 74, 66, 97, 48, 70, 50, 98, 49, 74, 117, 87, 87, 104, 113, 81, 107, 112, 87, 85, 108, 90, 79, 82, 69, 57, 85, 85, 88, 78, 82, 90, 106, 100, 77, 98, 108, 104, 84, 77, 48, 104, 89, 99, 70, 100, 72, 90, 108, 66, 86, 83, 51, 108, 114, 100, 69, 69, 48, 77, 87, 74, 75, 79, 72, 85, 121, 78, 106, 66, 74, 85, 106, 100, 113, 86, 107, 78, 116, 89, 107, 112, 72, 98, 71, 70, 87, 98, 87, 53, 75, 85, 68, 100, 73, 99, 72, 70, 110, 87, 107, 49, 73, 97, 106, 100, 53, 98, 71, 86, 50, 85, 49, 111, 52, 81, 109, 74, 67, 81, 87, 108, 70, 81, 83, 57, 73, 85, 107, 56, 122, 83, 49, 100, 49, 81, 84, 108, 119, 77, 106, 66, 69, 83, 48, 57, 114, 98, 68, 104, 49, 90, 85, 116, 111, 84, 84, 73, 118, 97, 50, 52, 52, 77, 88, 99, 52, 78, 85, 70, 68, 99, 84, 108, 83, 86, 71, 86, 106, 86, 107, 86, 68, 83, 86, 70, 69, 77, 51, 107, 119, 100, 71, 78, 105, 98, 110, 77, 121, 84, 110, 100, 87, 78, 109, 78, 104, 98, 72, 86, 66, 86, 105, 57, 120, 77, 71, 81, 118, 97, 88, 66, 109, 98, 69, 82, 51, 97, 105, 116, 78, 78, 84, 104, 108, 98, 72, 78, 50, 82, 70, 100, 120, 100, 48, 108, 110, 82, 88, 81, 119, 87, 105, 115, 122, 82, 69, 73, 120, 85, 70, 104, 111, 81, 107, 57, 80, 85, 48, 53, 104, 100, 84, 86, 69, 82, 71, 111, 118, 84, 70, 82, 53, 99, 106, 74, 74, 99, 71, 85, 122, 98, 87, 70, 84, 87, 68, 90, 109, 82, 87, 107, 120, 82, 85, 78, 74, 82, 107, 103, 121, 101, 110, 90, 68, 75, 48, 108, 122, 90, 71, 49, 73, 79, 72, 90, 72, 100, 86, 74, 76, 83, 85, 112, 108, 81, 86, 108, 116, 81, 86, 66, 53, 90, 110, 70, 106, 99, 69, 107, 51, 97, 69, 116, 72, 99, 48, 103, 121, 98, 69, 115, 114, 84, 107, 70, 112, 81, 108, 73, 119, 97, 85, 90, 90, 84, 68, 86, 112, 78, 109, 53, 51, 77, 107, 112, 90, 82, 122, 86, 73, 99, 107, 120, 49, 76, 50, 90, 111, 87, 105, 116, 117, 82, 110, 108, 77, 97, 86, 111, 121, 83, 69, 108, 72, 79, 84, 86, 117, 85, 108, 100, 76, 81, 108, 69, 57, 80, 81, 61, 61};

    public static String RSA_SIGN_PRIVATE_KEY = new String(Base64.getDecoder().decode(PRIVATE_KEY_BYTE));

    public static void grantSign(Object obj) {
        if (!(obj instanceof BaseSignDTO)) {
            return;
        }
        ((BaseSignDTO) obj).grantSign(RSA_SIGN_PRIVATE_KEY);
    }

}
